# RULE 13 Запуск вентилятора (regex)
MATCHED_RULE13='0'
REGEX='CYCLE'
if [[ $LINE =~ $REGEX ]]
then
 MATCHED_RULE13="1"
fi


# RULE 13 CONDITIONS
#Condition 13.1 (var) 
TEST_VARIABLE=`cat $DATA_PATH/cfgHwork.dat`
if [[ $TEST_VARIABLE -ne "1" ]]
then
 MATCHED_RULE13="0"
fi

#Condition 13.2 (var) 
TEST_VARIABLE=`cat $DATA_PATH/Hcycle.dat`
if [[ $TEST_VARIABLE -ne "0" ]]
then
 MATCHED_RULE13="0"
fi

#Condition 13.3 (var) 
TEST_VARIABLE=`cat $DATA_PATH/Hpause.dat`
if [[ $TEST_VARIABLE -ne "0" ]]
then
 MATCHED_RULE13="0"
fi

#Condition 13.4 (var) 
TEST_VARIABLE=`cat $DATA_PATH/HcellarI.dat`
TEST_S=`cat $DATA_PATH/cfgHstart.dat`
TEST_VALUE=$(printf %.0f $TEST_S)
if [[ $TEST_VARIABLE -lt $TEST_VALUE ]]
then
 MATCHED_RULE13="0"
fi


# RULE 13 ACTIONS
if [[ "$MATCHED_RULE13" == "1" ]]
then

#Action 13.1 (custom) 
echo 1 > /sys/class/gpio/gpio0/value

#Action 13.2 (custom) 
echo 0 > /sys/class/gpio/gpio4/value

#Action 13.3 (set_timer) 
echo "Setting timer: TimerHcycle" | write_log
rm -f $DATA_PATH/TimerHcycle-*.timer
TIMEOUT="$(date +%s)"
let TIMEOUT+=1200
echo -n "TimerHcycleFun">$DATA_PATH/TimerHcycle-$TIMEOUT.timer

#Action 13.4 (var) 
echo "Updating variable: Hcycle to 1" | write_log
SAVE_DATA="1"
echo -n "$SAVE_DATA">$DATA_PATH/Hcycle.dat
fi
